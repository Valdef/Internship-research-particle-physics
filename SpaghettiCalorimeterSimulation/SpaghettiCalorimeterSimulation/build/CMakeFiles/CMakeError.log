Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /shared/physics/physdata/nuclear/ePIC_EIC/vd613/Internship/SpaghettiCalorimeterSimulation/build/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_dad65/fast && /usr/bin/make  -f CMakeFiles/cmTC_dad65.dir/build.make CMakeFiles/cmTC_dad65.dir/build
make[1]: Entering directory '/shared/physics/physdata/nuclear/ePIC_EIC/vd613/Internship/SpaghettiCalorimeterSimulation/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_dad65.dir/src.c.o
/opt/york/easybuild/generic_arch/software/GCCcore/11.2.0/bin/cc   -DCMAKE_HAVE_LIBC_PTHREAD -o CMakeFiles/cmTC_dad65.dir/src.c.o -c /shared/physics/physdata/nuclear/ePIC_EIC/vd613/Internship/SpaghettiCalorimeterSimulation/build/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_dad65
/opt/york/easybuild/generic_arch/software/CMake/3.18.4-GCCcore-10.2.0/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dad65.dir/link.txt --verbose=1
/opt/york/easybuild/generic_arch/software/GCCcore/11.2.0/bin/cc  -DCMAKE_HAVE_LIBC_PTHREAD CMakeFiles/cmTC_dad65.dir/src.c.o -o cmTC_dad65 
CMakeFiles/cmTC_dad65.dir/src.c.o:src.c:function main: error: undefined reference to 'pthread_create'
CMakeFiles/cmTC_dad65.dir/src.c.o:src.c:function main: error: undefined reference to 'pthread_detach'
CMakeFiles/cmTC_dad65.dir/src.c.o:src.c:function main: error: undefined reference to 'pthread_cancel'
CMakeFiles/cmTC_dad65.dir/src.c.o:src.c:function main: error: undefined reference to 'pthread_join'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_dad65.dir/build.make:106: cmTC_dad65] Error 1
make[1]: Leaving directory '/shared/physics/physdata/nuclear/ePIC_EIC/vd613/Internship/SpaghettiCalorimeterSimulation/build/CMakeFiles/CMakeTmp'
make: *** [Makefile:140: cmTC_dad65/fast] Error 2


Source file was:
#include <pthread.h>

void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

